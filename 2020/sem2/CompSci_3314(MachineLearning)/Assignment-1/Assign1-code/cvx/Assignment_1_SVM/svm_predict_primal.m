function test_accuracy = svm_predict_primal ( data_test , label_test , svm_model )
% This function uses the variables generated from the svm_train_primal
% model to predict the classification on the X_test data 

%% Variables declaration
% An array with 1500 elements initialised as zero
Predicted_Labels = zeros(1500,1);

Total_Predicted_primal_Labels = zeros(1500,11);
% Extract the w and b from svm_model
w_primal = svm_model.w;
b_primal = svm_model.b;

Sum = 0;

%% Classifying the test dataset using the generated training model variables 
for num=1:11
    for i=1:1500
        if (data_test(i,:)*w_primal(:,num)+b_primal(num)) > 0
            Predicted_Labels(i,1) = 1;
        else
            Predicted_Labels(i,1) = -1;
        end
    end
    Total_Predicted_primal_Labels(:,num) = Predicted_Labels;
end

%% Comparing the y labels generated by my model to the predefined y labels in y_test table
for num=1:11
    for i=1:1500
        if Total_Predicted_primal_Labels(i,num) == label_test(i)
            Sum = Sum + 1;
        end
    end
    test_accuracy(num) = Sum/1500*100; % Checking for Correctness 
    Sum=0;
end

[B_P,Pos_P] = max(test_accuracy); 
Best_Test_Accuracy_Primal = B_P;

test_accuracy = struct('All_C_accuracy', test_accuracy, 'Best_Accuracy', Best_Test_Accuracy_Primal);

end



        

    
